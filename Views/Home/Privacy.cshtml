@model CWCalender

@{
    ViewData["Title"] = "Privacy Policy";
    var dayIndex = 0;
    var today = DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString();
}
<h1>@ViewData["Title"]</h1>



<section id="about-us" class="section-bg">
    <a href="#@today" class="todayAncor m-auto w-100">Today</a>
    <div class="container" data-aos="fade-up">
        <div class="row">
            @for (int i = 0; i < Model.Years.Count; i++)
            {
                @for (int j = 0; j < Model.Years[i].Month.Count; j++)
                {
                    var skipDays = Array.FindIndex(Model.Years[i].Month[j].Weekdays.ToArray(), ele =>
                    {
                        string elementName = ele.ToString().Substring(0, 3).ToLower();
                        string targetName = Model.Years[i].Month[j].Day[0].Name.ToLower();
                        return elementName.Equals(targetName, StringComparison.OrdinalIgnoreCase);
                    });

                    var tocontinue = false;
                    var myindex = 0;
                    dayIndex = 0;


                    <div class="offset-md-1 col-md-5">

                        <div class="card bg-white calenderRow m-3 shadow p-3 w-100 m-auto mb-3" data-aos="fade-up" id="@(Model.Years[i].Year.ToString()+Model.Years[i].Month[j].Month.ToString())">
                            <div class="card-title  text-center ">
                                <div class="h4"> @Model.Years[i].Month[j].Name (@Model.Years[i].Year) </div>
                            </div>

                            @for (int w = 0; w < Model.Years[i].Month[j].Weekdays.Count; w++)
                            {
                                var leavediv = w == 0 || w == 6 ? "bg-danger text-white h4 " : " h5";

                                <div class="row @leavediv">
                                    <div class="col-md-1 col-1 text-nowrap">@Model.Years[i].Month[j].Weekdays[w].Substring(0,3)</div>


                                    @if (Model.Years[i].Month[j].Weekdays[w].Substring(0, 3).ToLower() == Model.Years[i].Month[j].Day[0].Name.ToLower().Trim())
                                    {
                                        <div class="col-md-2 text-center col-2 text-nowrap" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                             data-day="@Model.Years[i].Month[j].Day[(w-skipDays)].Day"
                                             id="@(Model.Years[i].Month[j].Day[(w-skipDays)].Day.ToString() +Model.Years[i].Month[j].Month.ToString()+ Model.Years[i].Year.ToString())">
                                            <span class="dayclick"> @Model.Years[i].Month[j].Day[(w-skipDays)].Day</span>
                                        </div>
                                        tocontinue = true;
                                        myindex++;
                                    }
                                    else
                                    @if (tocontinue)
                                    {
                                        <div class="col-md-2 text-center col-2  text-nowrap" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                             data-day="@Model.Years[i].Month[j].Day[(w-skipDays)].Day"
                                             id="@(Model.Years[i].Month[j].Day[(w-skipDays)].Day.ToString() +Model.Years[i].Month[j].Month.ToString()+ Model.Years[i].Year.ToString())">
                                            <span class="dayclick">@Model.Years[i].Month[j].Day[(w-skipDays)].Day</span>
                                        </div>
                                        myindex++;
                                    }
                                    else
                                    {
                                        <div class="col-md-2 text-center col-2  text-nowrap" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                             data-day="@Model.Years[i].Month[j].Day[w].Day">
                                        </div>
                                    }



                                    <div class="col-md-2 text-center col-2 text-nowrap" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                         data-day="@Model.Years[i].Month[j].Day[(7-(skipDays)+w)].Day"
                                         id="@(Model.Years[i].Month[j].Day[(7-skipDays)+w].Day.ToString() +Model.Years[i].Month[j].Month.ToString()+ Model.Years[i].Year.ToString())">
                                        <span class="dayclick">@Model.Years[i].Month[j].Day[(7-(skipDays)+w)].Day</span>
                                    </div>
                                    <div class="col-md-2 text-center col-2  text-nowrap" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                         data-day="@Model.Years[i].Month[j].Day[(14-(skipDays)+w)].Day"
                                         id="@(Model.Years[i].Month[j].Day[(14-skipDays)+w].Day.ToString() +Model.Years[i].Month[j].Month.ToString()+ Model.Years[i].Year.ToString())">
                                        <span class="dayclick">@Model.Years[i].Month[j].Day[(14-(skipDays)+w)].Day</span>
                                    </div>
                                    <div class="col-md-2 text-center col-2  text-nowrap" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                         data-day="@Model.Years[i].Month[j].Day[(21-(skipDays)+w)].Day"
                                         id="@(Model.Years[i].Month[j].Day[(21-skipDays)+w].Day.ToString() +Model.Years[i].Month[j].Month.ToString()+ Model.Years[i].Year.ToString())">
                                        <span class="dayclick"> @Model.Years[i].Month[j].Day[(21-(skipDays)+w)].Day</span>
                                    </div>

                                    @{
                                        if ((28 - skipDays) + w < Model.Years[i].Month[j].Day.Count)
                                        {
                                                    <div class="col-md-1 text-center col-1 dayclick text-nowrap" id="@(Model.Years[i].Month[j].Day[(28-skipDays)+w].Day.ToString() +Model.Years[i].Month[j].Month.ToString()+ Model.Years[i].Year.ToString())" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                                         data-day="@Model.Years[i].Month[j].Day[(28-skipDays)+w].Day">
                                                        @Model.Years[i].Month[j].Day[(28-skipDays)+w].Day
                                                    </div>
                                        }
                                        if ((35 - skipDays) + w < Model.Years[i].Month[j].Day.Count)
                                        {
                                                    <div class="col-md-1 text-center col-1 dayclick text-nowrap" id="@(Model.Years[i].Month[j].Day[(35-skipDays)+w].Day.ToString() +Model.Years[i].Month[j].Month.ToString()+ Model.Years[i].Year.ToString())" data-year="@Model.Years[i].Year" data-month="@Model.Years[i].Month[j].Month"
                                                         data-day="@Model.Years[i].Month[j].Day[(35-skipDays)+w].Day">
                                                        @Model.Years[i].Month[j].Day[(35-skipDays)+w].Day
                                                    </div>
                                        }
                                    }


                                </div>

                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>



@section Scripts{
    <script>

        $(document).ready(function () {
            var date = "";
            $(".todayAncor").trigger("click");

            $(".dayclick").click(function () {
                date = $(this).parent().data("day") + "-" + $(this).parent().data("month") + "-" + $(this).parent().data("year");

                var existsurl = "@Url.Action("EventExists","Home")";
                var obj = { date: date, attendance: "", time: "" };
                var morning = false;
                var evening = false;

                $.ajax({
                    method: "post",
                    url: existsurl,
                    async: true,
                    dataType: 'json',
                    data: obj,
                    success: function (data) {
                        
                        $.each(data, function (k, v) {
                            if (v.attendanceTime == "evening") {
                                evening = true;
                            }
                            if (v.attendanceTime == "morning") {
                                morning = true;
                            }
                        });

                        $("#attendanceModal").find(".currentDate").text("Date :" + date);
                        $("#attendanceModal").find("#MorningCheck").attr("disabled",morning);
                        $("#attendanceModal").find("#EveningCheck").attr("disabled",evening);

                        if (morning) { 
                            $("#attendanceModal").find("#saveMorningAttendance").addClass("d-none");
                            $("#attendanceModal").find("#MorningCheck").prop("checked", morning);

                        }
                        if (evening) { 
                            $("#attendanceModal").find("#saveEveningAttendance").addClass("d-none");
                            $("#attendanceModal").find("#EveningCheck").prop("checked", evening);
                        }

                        $("#attendanceModal").modal("show");
                    }
                });



            });


            


            $(".attendancecheck").click(function () {
                var attendance = $(this).is(':checked');

                if (attendance == true) {
                    $(this).parent().siblings(".saveattendance").removeClass("d-none");
                } else
                    $(this).parent().siblings(".saveattendance").addClass("d-none");
            });


            $(".saveattendance").click(function () {

                var existsurl = "@Url.Action("EventExists","Home")";
                var url = "@Url.Action("DateClick","Home")";
                var attendance = $(this).siblings('.form-check').children(".attendancecheck").is(':checked');
                var time = $(this).data("time");
                var obj = { date: date, attendance: attendance, time: time };





                $.ajax({
                    method: "post",
                    url: url,
                    dataType: 'json',
                    data: obj,
                    success: function (data) {

                    }
                });
            });
        });
    </script>
                        }
